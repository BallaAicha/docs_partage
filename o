package com.socgen.unibank.services.autotest.gateways.outbound.persistence.jpa;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Entity
@Table(name = "document_version")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class DocumentVersionEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne
    @JoinColumn(name = "document_id", nullable = false) // Association à un Document
    private DocumentEntity document;

    @Column(nullable = false)
    private Integer versionNumber;

    @Column(nullable = false)
    private String name;

    @Column(nullable = false)
    private String description;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "creation_date", nullable = false)
    private Date creationDate;

    @Column(nullable = false)
    private String createdBy;
}


——————


package com.socgen.unibank.services.autotest.model.model;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class DocumentVersionDTO {
    private Long id; // ID de la version
    private Long documentId; // ID du document principal
    private Integer versionNumber;
    private String name;
    private String description;
    private Date creationDate;
    private String createdBy;
}


——————————
package com.socgen.unibank.services.autotest.core;

import com.socgen.unibank.services.autotest.model.model.DocumentVersionDTO;

import java.util.List;

public interface DocumentVersionRepository {
    List<DocumentVersionDTO> findVersionsByDocumentId(Long documentId);

    void saveDocumentVersion(DocumentVersionDTO documentVersion);
}


————————————————
package com.socgen.unibank.services.autotest.gateways.outbound.persistence;

import com.socgen.unibank.services.autotest.core.DocumentVersionRepository;
import com.socgen.unibank.services.autotest.gateways.outbound.persistence.jpa.DocumentVersionEntity;
import com.socgen.unibank.services.autotest.gateways.outbound.persistence.jpa.DocumentVersionJpaRepo;
import com.socgen.unibank.services.autotest.model.model.DocumentVersionDTO;
import lombok.AllArgsConstructor;
import org.springframework.stereotype.Component;

import java.util.List;
import java.util.stream.Collectors;

@Component
@AllArgsConstructor
public class DocumentVersionRepoImpl implements DocumentVersionRepository {

    private final DocumentVersionJpaRepo versionJpaRepo;

    @Override
    public List<DocumentVersionDTO> findVersionsByDocumentId(Long documentId) {
        return versionJpaRepo.findByDocumentId(documentId)
            .stream()
            .map(entity -> new DocumentVersionDTO(
                entity.getId(),
                entity.getDocument().getId(),
                entity.getVersionNumber(),
                entity.getName(),
                entity.getDescription(),
                entity.getCreationDate(),
                entity.getCreatedBy()
            ))
            .collect(Collectors.toList());
    }

    @Override
    public void saveDocumentVersion(DocumentVersionDTO documentVersion) {
        DocumentVersionEntity entity = new DocumentVersionEntity();
        entity.setDocument(new DocumentEntity(documentVersion.getDocumentId(), null, null, null, null, null, null, null, null));
        entity.setVersionNumber(documentVersion.getVersionNumber());
        entity.setName(documentVersion.getName());
        entity.setDescription(documentVersion.getDescription());
        entity.setCreationDate(documentVersion.getCreationDate());
        entity.setCreatedBy(documentVersion.getCreatedBy());

        versionJpaRepo.save(entity);
    }
}


———————————
package com.socgen.unibank.services.autotest.gateways.outbound.persistence.jpa;

import org.springframework.data.jpa.repository.JpaRepository;

import java.util.List;

public interface DocumentVersionJpaRepo extends JpaRepository<DocumentVersionEntity, Long> {
    List<DocumentVersionEntity> findByDocumentId(Long documentId);
}

——————————




package com.socgen.unibank.services.autotest.model.usecases;

import com.socgen.unibank.platform.domain.Query;
import com.socgen.unibank.platform.models.RequestContext;
import com.socgen.unibank.services.autotest.model.model.DocumentVersionDTO;

import java.util.List;

public interface GetDocumentVersions extends Query {
    List<DocumentVersionDTO> handle(Long documentId, RequestContext context);
}


————————


package com.socgen.unibank.services.autotest.core.usecases;

import com.socgen.unibank.platform.models.RequestContext;
import com.socgen.unibank.services.autotest.core.DocumentVersionRepository;
import com.socgen.unibank.services.autotest.model.model.DocumentVersionDTO;
import com.socgen.unibank.services.autotest.model.usecases.GetDocumentVersions;
import lombok.AllArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
@AllArgsConstructor
public class GetDocumentVersionsImpl implements GetDocumentVersions {

    private final DocumentVersionRepository versionRepository;

    @Override
    public List<DocumentVersionDTO> handle(Long documentId, RequestContext context) {
        return versionRepository.findVersionsByDocumentId(documentId);
    }
}


—————————



@Tag(name = "Document Management")
@RequestMapping(name = "documents", produces = "application/json")
public interface DocumentAPI extends GetDocumentList, CreateDocument {
    // Existing endpoints...

    @Operation(
        summary = "Get all versions of a document",
        parameters = {
            @Parameter(ref = "entityIdHeader", required = true),
        }
    )
    @GetMapping("/documents/{documentId}/versions")
    List<DocumentVersionDTO> getDocumentVersions(@PathVariable Long documentId, @ModelAttribute RequestContext ctx);
}




—————————

<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">

    <changeSet id="3" author="Ousmane">
        <createTable tableName="document_version">
            <column name="id" type="BIGINT" autoIncrement="true">
                <constraints primaryKey="true"/>
            </column>
            <column name="document_id" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="version_number" type="INTEGER">
                <constraints nullable="false"/>
            </column>
            <column name="name" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="description" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="creation_date" type="TIMESTAMP">
                <constraints nullable="false"/>
            </column>
            <column name="created_by" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <addForeignKeyConstraint baseColumnNames="document_id"
                                 baseTableName="document_version"
                                 constraintName="fk_document_document_version"
                                 referencedColumnNames="id"
                                 referencedTableName="document"/>
    </changeSet>
</databaseChangeLog>
